@startuml

title __COMPANY's Class Diagram__\n

  namespace com.company {
    class com.company.Account {
        - balance : int
        + getBalance()
        + setBalance()
    }
  }
  

  namespace com.company {
    class com.company.Action {
        ~ amount : int
        ~ emitterId : String
        ~ targetId : String
    }
  }
  

  namespace com.company {
    enum ActionType {
      IncreaseBalance
      ReduceBalance
    }
  }
  

  namespace com.company {
    class com.company.BudgetManager {
        + createAdmin()
        + createUser()
        + findUserWithId()
        + findUserWithName()
        + getAllHistory()
        + getCommonHistory()
        + getUserHistory()
        + getUserRules()
        + replenishFunds()
        + replenishFunds()
        + setUserRules()
        + transferFunds()
        + transferFunds()
        + withdrawFunds()
        + withdrawFunds()
    }
  }
  

  namespace com.company {
    interface com.company.IAccount {
        {abstract} + getBalance()
        {abstract} + setBalance()
    }
  }
  

  namespace com.company {
    interface com.company.IBudgetManager {
        {abstract} + createAdmin()
        {abstract} + createUser()
        {abstract} + findUserWithId()
        {abstract} + findUserWithName()
        {abstract} + getAllHistory()
        {abstract} + getCommonHistory()
        {abstract} + getUserHistory()
        {abstract} + getUserRules()
        {abstract} + replenishFunds()
        {abstract} + replenishFunds()
        {abstract} + setUserRules()
        {abstract} + transferFunds()
        {abstract} + transferFunds()
        {abstract} + withdrawFunds()
        {abstract} + withdrawFunds()
    }
  }
  

  namespace com.company {
    interface com.company.ITransactionManager {
        {abstract} + replenishFunds()
        {abstract} + transferFunds()
        {abstract} + withdrawFunds()
    }
  }
  

  namespace com.company {
    class com.company.Main {
        {static} ~ windowHeight : int
        {static} ~ windowWidth : int
        {static} + main()
    }
  }
  

  namespace com.company {
    class com.company.Navigator {
        + Navigator()
        + go()
        - hideAll()
    }
  }
  

  namespace com.company {
    enum Route {
      BUDGET
      HISTORY
      LOGIN
      OPERATIONS
      REGISTRATION
      RULES
    }
  }
  

  namespace com.company {
    enum Rule {
      ChangeAnotherRules
      ChangeOwnRules
      GetAnotherBalance
      GetAnotherHistory
      GetAnotherRules
      GetCommonBalance
      GetCommonHistory
      GetOwnBalance
      GetOwnHistory
      GetOwnRules
      IncreaseAnotherBalance
      IncreaseCommonBalance
      IncreaseOwnBalance
      ReduceAnotherBalance
      ReduceCommonBalance
      ReduceOwnBalance
    }
  }
  

  namespace com.company {
    class com.company.Transaction {
        + actions : Action[]
        ~ dateTime : String
    }
  }
  

  namespace com.company {
    class com.company.TransactionLogger {
        - history : Transaction[]
        + getHistory()
        + log()
    }
  }
  

  namespace com.company {
    class com.company.TransactionManager {
        + replenishFunds()
        + transferFunds()
        + withdrawFunds()
        - transact()
    }
  }
  

  namespace com.company {
    class com.company.TransactionResult {
        + error : Boolean
        + errorMessage : String
    }
  }
  

  namespace com.company {
    class com.company.User {
        ~ id : String
        ~ name : String
        ~ password : String
        ~ rules : Rule[]
    }
  }
  

  com.company.Action o-- com.company.ActionType : type
  com.company.BudgetManager .up.|> com.company.IBudgetManager
  com.company.Navigator o-- com.company.screens.BudgetOperationsScreen : budgetOperationsScreen
  com.company.Navigator o-- com.company.screens.HistoryScreen : historyScreen
  com.company.Navigator o-- com.company.screens.LoginScreen : loginScreen
  com.company.Navigator o-- com.company.screens.OperationScreen : operationScreen
  com.company.Navigator o-- com.company.screens.RegistrationScreen : registrationScreen
  com.company.Navigator o-- com.company.screens.RulesScreen : rulesScreen


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
